/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Aullwen (https://sketchfab.com/Aullwen)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/laptop-7d870e900889481395b4a575b9fa8c3e
title: Laptop
*/

import { useEffect, useRef } from "react";
import { BBAnchor, Float, Html, useGLTF } from "@react-three/drei";
import { useStore } from "../../utils/store";
import gsap, { Power1 } from "gsap";
import LaptopContent from "./content.component";

export default function Laptop() {
  const { open, toggleOpen } = useStore();

  //@ts-ignore
  const { nodes, materials } = useGLTF("/laptop.glb");
  const ref = useRef(null!),
    screenRef = useRef(null!);

  useEffect(() => {
    const tl = gsap.timeline();
    tl.add(
      gsap.to(ref.current.position, {
        duration: 1,
        ease: Power1.easeInOut,
        y: open ? -2 : -10,
      })
    );
    tl.add(
      gsap.to(screenRef.current.rotation, {
        duration: 1,
        ease: Power1.easeInOut,
        x: open ? -Math.PI : -Math.PI / 2,
      }),
      "-=0.5"
    );

    screenRef.current && tl.play();
  }, [open]);

  return (
    <>
      <group
        scale={[0.1, 0.1, 0.1]}
        rotation={[0.125, 0.125, 0]}
        position={[-1, -10, 0]}
        castShadow
        receiveShadow
        dispose={null}
        ref={ref}
      >
        <group rotation={[-Math.PI / 2, 0, 0]}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <group
              position={[0, 0.98, 0]}
              rotation={[-Math.PI / 2, 0, 0]}
              scale={100}
            >
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Frame_ComputerFrame_0.geometry}
                material={materials.ComputerFrame}
                onClick={toggleOpen}
              />
            </group>
            <group
              position={[0, 0.65, -10.3]}
              rotation={[-Math.PI / 2, 0, -Math.PI]}
              scale={[100, 100, 88.24]}
              ref={screenRef}
            >
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Screen_ComputerScreen_0.geometry}
                material={materials.ComputerScreen}
              >
                <BBAnchor anchor={[0.01, 0.01, 0.025]}>
                  <Html
                    transform
                    occlude
                    scale={[0.01, 0.01, 0.01]}
                    position={[-0.01362575, 0.09379, -0.021]}
                    rotation={[0, Math.PI, 0]}
                    className="content-wrapper"
                  >
                    {open && <LaptopContent />}
                  </Html>
                </BBAnchor>
              </mesh>
            </group>
          </group>
        </group>
      </group>
    </>
  );
}

useGLTF.preload("/laptop.glb");
