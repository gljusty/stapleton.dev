/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Aullwen (https://sketchfab.com/Aullwen)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/laptop-7d870e900889481395b4a575b9fa8c3e
title: Laptop
*/

import React, { useRef } from "react";
import { GroupProps, useThree } from "@react-three/fiber";
import { BBAnchor, Html, useGLTF } from "@react-three/drei";

export default function Laptop(props: GroupProps) {
  //@ts-ignore
  const { nodes, materials } = useGLTF("/laptop.glb");
  const { camera } = useThree();
  const screenRef = useRef(null!);
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group
            position={[0, 0.98, 0]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Frame_ComputerFrame_0.geometry}
              material={materials.ComputerFrame}
            />
          </group>
          <group
            position={[0, 0.65, -10.3]}
            rotation={[Math.PI, 0, -Math.PI]}
            scale={[100, 100, 88.24]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Screen_ComputerScreen_0.geometry}
              material={materials.ComputerScreen}
              ref={screenRef}
              onClick={() => {
                camera.lookAt(screenRef.current.position ?? [0, 0, 0]);
              }}
            >
              <Html
                occlude
                position={[0, 0, 0]}
                rotation={[0, 0, 0]}
                wrapperClass="portal-wrapper"
              ></Html>
            </mesh>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/laptop.glb");
